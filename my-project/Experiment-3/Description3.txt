Title:- Admin Dashboard with CSS Grid Layout and Theme Switching

Objective
Design and build a professional, responsive admin dashboard interface using HTML, CSS Grid layout, 
and a theme switching feature (light and dark modes). This task focuses on advanced layout skills 
and the application of design adaptability through theming.

FIELD: Header
Requirement: Displays the dashboard title and a Dark Mode toggle option.
Behavior:
Title remains visible at all times.
Toggle switches between light and dark themes using CSS.
VALID SCENARIOS:
Header text is correctly labeled "Admin Dashboard".
Dark mode toggle is clickable via label.

FIELD: Sidebar Navigation
Requirement: Contains navigational links to different sections.
Behavior:
Static links in this version.
Styled for clarity and easy navigation.
VALID SCENARIOS:
Links to "Home", "Users", and "Settings" are visible.
Sidebar remains aligned to the left of the content area.

FIELD: Content Area
Requirement: Displays the welcome message and placeholder text for main dashboard content.
Behavior:
Static text in this version.
Designed for future integration with charts, tables, and reports.
VALID SCENARIOS:
Greeting message shows "Welcome, Adarsh!".
Content area is visually distinct from the sidebar.

FIELD: Footer
Requirement: Displays footer information at the bottom of the dashboard.
Behavior:
Statically shows copyright.VALID SCENARIOS:
Text reads "© 2025 Admin Panel".

FORM STRUCTURE
Requirement:
All components (header, sidebar, content, footer) should be placed inside a .dashboard grid layout.
VALID STRUCTURE:
.dashboard uses CSS Grid with three rows: header, main, footer.
Main section uses a two-column grid: sidebar and content.

CSS STYLING: A Structured Overview
1. ELEMENT: body (Page Layout)
Purpose: Ensures the page fills the screen and removes unwanted margins.
Properties & Effects:
margin: 0; → Removes default page margin.
font-family: Arial, sans-serif; → Modern and clean font choice.

2. ELEMENT: .dashboard (Main Layout)
Purpose: Acts as the container for the entire layout.
Properties & Effects:
display: grid; → Enables a flexible grid layout.
grid-template-rows: auto 1fr auto; → Defines header, main content, and footer areas.
min-height: 100vh; → Stretches to full viewport height.
background: white; (light mode) / #121212; (dark mode).
color: #000; (light mode) / #e0e0e0; (dark mode).


3. ELEMENT: .header
Purpose: Displays the dashboard title and dark mode toggle.
Properties & Effects:
background-color: aqua; (light mode) / #222; (dark mode).
color: white; for visibility.
padding: 1rem; for spacing.
display: flex; justify-content: space-between; align-items: center; → Aligns elements horizontally.

4. ELEMENT: .main
Purpose: Holds sidebar and content area in a 2-column layout.
Properties & Effects:
display: grid; grid-template-columns: 200px 1fr; → Sidebar fixed width, content takes the rest.

5. ELEMENT: .sidebar
Purpose: Contains navigation links.
Properties & Effects:
background: #f1f1f1; (light mode) / #1e1e1e; (dark mode).
padding: 1rem; for spacing.
Links use text-decoration: none; color: #333; (light mode) / #ccc; (dark mode).

6. ELEMENT: .content
Purpose: Displays main dashboard information.
Properties & Effects:
padding: 2rem; for spacing.
Background adjusts in dark mode.

7. ELEMENT: .footer
Purpose: Displays bottom copyright.
Properties & Effects:
background-color: aqua; (light mode) / #222; (dark mode).
color: white; text-align: center; padding: 1rem; for readability.

8. ELEMENT: #theme-toggle (Dark Mode Checkbox)
Purpose: Controls light/dark mode purely via CSS sibling selectors.
Properties & Effects:
#theme-toggle:checked ~ .dashboard changes background and text colors throughout layout.

Learning Outcomes
Learned how to use CSS Grid for structuring a multi-section layout.
Practiced dark mode toggling without JavaScript using CSS sibling selectors.
Understood how to create a sidebar navigation with distinct styling.
Learned flexbox alignment for header elements.
Practiced making a responsive and visually distinct dashboard layout.